generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Categories {
  id           Int     @id @default(autoincrement())
  category1    String
  category2    String?
  category3    String?
  categoryId   String  @unique
  categoryName String
}

model Recipes {
  id                    Int                     @id @default(autoincrement())
  title                 String
  sourceUrl             String                  @unique(map: "Recipes_recipeUrl_key")
  description           String
  keywords              String[]
  totalCookingTime      Int                     @default(-1)
  materials             String[]
  materialsConverted    String
  foodImageUrl          String
  dish                  String?
  category              String?
  cuisine               String?
  recipeMaterialsSearch RecipeMaterialsSearch[]
  submissions           RecipeSubmissions[]
  favorites             UserFavorites[]
}

model RecipesBackup {
  id                 Int      @id @default(autoincrement())
  title              String
  description        String
  totalCookingTime   Int      @default(-1)
  materials          String[]
  materialsConverted String
  keywords           String[]
  sourceUrl          String   @unique
  foodImageUrl       String
}

model RecipeMaterialsSearch {
  id       Int     @id @default(autoincrement())
  material String  @unique
  recipeId Int
  recipe   Recipes @relation(fields: [recipeId], references: [id])
}

model Urls {
  id  Int    @id @default(autoincrement())
  url String @unique
}

model Users {
  id          String              @id
  email       String              @unique
  createdAt   DateTime            @default(now())
  updatedAt   DateTime            @updatedAt
  submissions RecipeSubmissions[]
  favorites   UserFavorites[]
}

model UserFavorites {
  id             Int      @id @default(autoincrement())
  userId         String
  recipeId       Int
  createdAt      DateTime @default(now())
  favoriteRecipe Recipes  @relation(fields: [recipeId], references: [id])
  user           Users    @relation(fields: [userId], references: [id])

  @@unique([userId, recipeId])
}

model RecipeSubmissions {
  id        Int      @id @default(autoincrement())
  recipeId  Int
  userId    String
  createdAt DateTime @default(now())
  recipe    Recipes  @relation(fields: [recipeId], references: [id])
  user      Users    @relation(fields: [userId], references: [id])

  @@unique([userId, recipeId])
}

model Logs {
  id        Int      @id @default(autoincrement())
  requestedAt DateTime
  method      String
  url         String
  status      Int
  logType     String
  message     String
}
